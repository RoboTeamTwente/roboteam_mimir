syntax = "proto3";
import "Vector2f.proto";

package mimir;

// Represents a field marking as a line segment represented by a start point p1,
// and end point p2, and a line thickness. The start and end points are along
// the center of the line, so the thickness of the line extends by thickness / 2
// on either side of the line.
message SSL_FieldLineSegment {
  // Name of this field marking.
  string name = 1;
  // Start point of the line segment.
  Vector2f p1 = 2;
  // End point of the line segment.
  Vector2f p2 = 3;
  // Thickness of the line segment.
  float thickness = 4;
}

// Represents a field marking as a circular arc segment represented by center point, a
// start angle, an end angle, and an arc thickness.
message SSL_FieldCicularArc {
  // Name of this field marking.
  string name = 1;
  // Center point of the circular arc.
  Vector2f center = 2;
  // Radius of the arc.
  float radius = 3;
  // Start angle in counter-clockwise order.
  float a1 = 4;
  // End angle in counter-clockwise order.
  float a2 = 5;
  // Thickness of the arc.
  float thickness = 6;
}

message SSL_GeometryFieldSize {
  int32 field_length = 1;
  int32 field_width = 2;
  int32 goal_width = 3;
  int32 goal_depth = 4;
  int32 boundary_width = 5;
  repeated SSL_FieldLineSegment field_lines = 6;
  repeated SSL_FieldCicularArc field_arcs = 7;
}

message SSL_GeometryCameraCalibration {
  uint32 camera_id     = 1;
  float focal_length = 2;
  float principal_point_x = 3;
  float principal_point_y = 4;
  float distortion = 5;
  float q0 = 6;
  float q1 = 7;
  float q2 = 8;
  float q3 = 9;
  float tx = 10;
  float ty = 11;
  float tz = 12;
  float derived_camera_world_tx = 13;
  float derived_camera_world_ty = 14;
  float derived_camera_world_tz = 15;
}

message SSL_GeometryData {
  SSL_GeometryFieldSize field = 1;
  repeated SSL_GeometryCameraCalibration calib = 2;
}
